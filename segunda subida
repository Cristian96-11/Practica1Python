#!/usr/bin/env python
# -*- coding: utf-8 -*-

from Tkinter import *
import tkFileDialog
import os
import shutil
import fnmatch
import tkSimpleDialog
import subprocess
#------------------------------------------------------------------------------------
#MÉTODOS

global inicio
inicio = False
global arch

#la variable no se actualiza!!!

#Selecciona la direccion del entry seleccionado por el usuario FUNCIONAL
def seleccionarDir(): 
	carpeta = tkFileDialog.askdirectory(title='Escollir directori de traball')
	directorio.configure(state="normal")
	directorio.delete(0,END)
	directorio.insert(0,carpeta)
	directorio.configure(state="disable") #Ponemos su estado en desabilitado para evitar que el usuario no pueda modificarlo en panatalla.
	#carpeta = path absoluto de la carpeta seleccionada
	global inicio
	inicio = True
	
	
def mensajeConfirmacion():
	verr=Tk()
	verr.title("Error")
	verr.minsize(300,50)
	mensajeboton=Label(verr,text="Primer s'ha d'introduir el directori")
	mensajeboton.pack(side=TOP) 
	confirm = Button(verr, text="OK", command=verr.destroy)
	confirm.pack(side=BOTTOM)
	

#Metodo para ....	FUNCIONAL
def obrirG(archivo):
	if (inicio):
		path = directorio.get()
		f = open(path + "/" + archivo,'r+')
		lista.delete("0.0", END)
		for line in f:
			lista.insert(END,line)
		global arch
		arch = archivo
	else:
		mensajeConfirmacion()
	
def obrirS():
	archivo = archivos.get()
	if (archivo[-3:] != '.sh'):
		archivos.insert(END,'.sh')
	obrirG(archivos.get())
	
	   
#Metodo para guardar un fichero FUNCIONAL
def guardar(archivo):
	if(inicio):
		path = directorio.get()
		content = lista.get("0.0", END)
		pa = path+"/"+archivo
		subprocess.call('echo "{}" > {}'.format(content,pa), shell=True)
	else:
		mensajeConfirmacion()
	
def guardarS():
	global arch
	print arch
	archivos.delete(0,END)
	archivos.insert(0,arch)
	guardar(arch)
	

def guardarN():
	aux = True
	while (aux):
	   nombre=tkSimpleDialog.askstring("Guardar en un nou script '.sh'","Nom del fitxer")
	   if (nombre[-3:] == '.sh'):
		  aux = False 
	guardar(nombre)
	
	
def gstderr(): #FUNCIONAL
	path = directorio.get()
	archivo = archivos.get()
	script = path+"/"+archivo
	archivo = archivo[:-3]
	pa = path+"/"+archivo+".err"
	pa.delete(0,END)#prueba de limpieza
	subprocess.call('{} 2> {}'.format(script,pa), shell=True)
	


def gstdout():	#FUNCIONAL
	path = directorio.get()
	archivo = archivos.get()
	script = path+"/"+archivo
	archivo = archivo[:-3]
	pa = path+"/"+archivo+".out"
	pa.delete(0,END)#prueba de limpieza
	subprocess.call('{} > {}'.format(script,pa), shell=True)
	
	
def runn():
	path = directorio.get()
	archivo = archivos.get()
	script = path+"/"+archivo+" "+argumentos.get()
	archivo = archivo[:-3]
	if out.get():
	   script += " > "+path+"/"+archivo+".out"	
	if err.get():
	   script = script+" 2> "+path+"/"+archivo+".err"
	subprocess.call('{}'.format(script), shell=True)
	

def vstderr():
	archivo = archivos.get()
	archivo = archivo[:-3]
	archivo += ".err"
	obrirG(archivo)


def vstdout():
	archivo = archivos.get()
	archivo = archivo[:-3]
	archivo += ".out"
	obrirG(archivo)
	

def attime():
	path=directorio.get()
	archivo=archivos.get()
	horaa=hora7.get() 
	if (horaa[2]==':'):
		#&& ((hora[0]<'2' && hora[0]>='0' && hora[1]<='9') || (hora[0]=='2' && hora[1]<'4')) && hora[1]>='0' && (hora[3]<'6' && hora[3]>='0' && hora[4]<='9' && hora[4]>='0'): #comprobar hora bien introducida
		print horaa
	comanda='/tmp/'+horaa
	subprocess.call("echo 'rm {}' > {}".format(comanda, comanda),shell=True)
	
	if (False):
		linea=len(open(comanda).readlines())
    #else:
		linea=1
		subprocess.call("echo 'rm {}' > {}".format(comanda, comanda), shell=True)
	comanda2=path+'/'+archivo
	if out.get():
		comanda2=comanda2+" > "+comanda2[:-3]+".out"
	if err.get():
		comanda2=comanda2+" 2> "+comanda2[:-3]+".err"
	comanda2="sed -i '1i "+comanda2+"'"
	print comanda2
	print comanda
	subprocess.call("{} {}".format(comanda2,comanda), shell=True)#Problema con maquina virtual???
	
def crontime():
	path=directorio.get()
	archivo=archivos.get()
	minuto=min6.get()
	horaa=hora6.get() 
	comanda=minuto+" "+horaa+" * * * "+path+"/"+archivo
	print comanda
	
	
	
	
	

#------------------------------------------------------------------------------------			

#Creacion de la ventana principal MAIN
ventana=Tk()
ventana.title("Execució d'escripts en el temps")
ventana.minsize(600,600)

#------------------------------------------------------------------------------------

#Creacion de los frames principales (Arriba, medio, abajo)

#Frame 1
f1=Frame()
f1.configure()
f1.pack(side=TOP,fill=X)

#Frame 2
f2=Frame()
f2.configure()
f2.pack(side=TOP, fill=X)

#Frame 3
f3=Frame()
f3.configure()
f3.pack(side=TOP,fill=X)

#Frame 4
f4=Frame()
f4.configure()
f4.pack(expand=TRUE,fill=BOTH,side=TOP)

#Frame 50
f50=Frame()
f50.configure()
f50.pack(side=BOTTOM,fill=X)

#Frame 10
f10=Frame(f50)
f10.configure()
f10.pack(side=TOP,fill=X)

#Frame 9
f9=Frame(f50)
f9.configure()
f9.pack(side=TOP,fill=X)

#Frame 8
f8=Frame(f50)
f8.configure()
f8.pack(side=TOP,fill=X)

#Frame 79
f79=Frame(f50)
f79.configure()
f79.pack(side=TOP,fill=X)

#Frame 7
f7=Frame(f50)
f7.configure()
f7.pack(side=TOP,fill=X)

#Frame 6
f6=Frame(f50)
f6.configure()
f6.pack(side=TOP,fill=X)

#Frame 5
f5=Frame(f50)
f5.configure()
f5.pack(side=TOP,fill=X)




#-----------------------------------------------------------------------------------
#definición de los botones del frame 1
f11=Frame(f1)
f11.pack(fill=X)

#Boton 1, escoger directorio de trabajo
cd=Button(f11,text='Escollir directori de traball', command=seleccionarDir)#añadir el comand de la acción
cd.pack(side=LEFT)
directorio=Entry(f11)
directorio.configure(state="disable")
directorio.pack(side=LEFT,expand=TRUE,fill=X)

#-----------------------------------------------------------------------------------
#definición de los botones del frame 2
f21=Frame(f2)
f21.pack(fill=X)

archivos=Entry(f21)
archivos.configure()
archivos.insert(0,'hola.sh')

#Boton 21, abrir un script
obrir=Button(f21, text='Obrir Script',command=obrirS)
obrir.pack(side=LEFT)

archivos.pack(side=LEFT,expand=TRUE,fill=X)

#Boton 22, guardar cambios
guarda=Button(f21, text='Guardar Script', command=guardarS)
guarda.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#definición de los botones del frame 3
f31=Frame(f3)
f31.pack(fill=X)

#Boton 3, guardar copia en un script nou
nou=Button(f31, text='Guardar en un nou script', command=guardarN)#añadir command
nou.pack(side=LEFT)


#-----------------------------------------------------------------------------------
#Configuracion de la lista y scrollbar. 4
scroll = Scrollbar(f4,orient=VERTICAL)
lista = Text(f4,xscrollcommand=scroll.set)
scroll.config(command=lista.yview)
scroll.pack(side=RIGHT,fill=Y)
lista.pack(side=TOP,expand=TRUE,fill=BOTH, anchor=W)


#-----------------------------------------------------------------------------------
#Boton 5, guardar copia en un script nou
sortir=Button(f5, text='Sortir', command=quit)#añadir command
sortir.pack(side=LEFT)


#-----------------------------------------------------------------------------------
#Boton 6, guardar copia en un script nou
run3=Button(f6, text='Run', command=crontime)#añadir command
run3.pack(side=RIGHT)
ejecutarC1=Label(f6,text='  HH:MM  ') 
ejecutarC1.pack(side=RIGHT)

min6=Entry(f6,width=2)
min6.configure()
min6.insert(0,'*')
min6.pack(side=RIGHT,expand=FALSE)

hora6=Entry(f6,width=2)
hora6.configure()
hora6.insert(0,'*')
hora6.pack(side=RIGHT)

dm6=Entry(f6,width=2)
dm6.configure()
dm6.insert(0,'*')
dm6.pack(side=RIGHT)

mes6=Entry(f6,width=2)
mes6.configure()
mes6.insert(0,'*')
mes6.pack(side=RIGHT)

ds6=Entry(f6,width=2)
ds6.configure()
ds6.insert(0,'*')
ds6.pack(side=RIGHT)

ejecutarC3=Label(f6,text='Programa cada dia a les ') 
ejecutarC3.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#Boton 7, run at
run2=Button(f7, text='Run', command=attime)
run2.pack(side=RIGHT)

ejecutarA1=Label(f7,text='  HH:MM  ') 
ejecutarA1.pack(side=RIGHT)

hora7=Entry(f7,width=8)
hora7.configure()
hora7.insert(0,'HH:MM')
hora7.pack(side=RIGHT)

ejecutarA3=Label(f7,text='Executa un cop a les ') 
ejecutarA3.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#Boton 79, run at
run4=Button(f79, text='Run', command=attime)
run4.pack(side=RIGHT)

ejecutarA1=Label(f79,text='  segons  ') 
ejecutarA1.pack(side=RIGHT)

seg79=Entry(f79,width=5)
seg79.configure()
seg79.insert(0,'')
seg79.pack(side=RIGHT,expand=FALSE)

ejecutarA3=Label(f79,text="Executa d'aquí a ") 
ejecutarA3.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#Boton 8, run
run1=Button(f8, text='Run', command=runn)#añadir command
run1.pack(side=RIGHT)
ejecutarI=Label(f8,text='Executa immediatament') #falta meter el comand del boton para Añadir funcionalidad
ejecutarI.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#Boton 91, ver stderr
verstderr=Button(f9, text='Veure Stderr', command=vstderr)#añadir command
verstderr.pack(side=RIGHT)

#Boton 92, ver stdout
verstdout=Button(f9, text='Veure Stdout', command=vstdout)#añadir command
verstdout.pack(side=RIGHT)


#-----------------------------------------------------------------------------------
#Label f10
input1=Label(f10,text="Arguments d'entrada: ") 
input1.pack(side=LEFT)

#Entrada argumento
argumentos=Entry(f10)
argumentos.configure()
argumentos.insert(0,'')
argumentos.pack(side=LEFT,expand=TRUE,fill=X)

err=IntVar()
error = Checkbutton(f10, text="Genera Stderr", variable=err).pack(side=RIGHT)
out = IntVar()
salida = Checkbutton(f10, text="Genera Stdrout", variable=out).pack(side=RIGHT)





ventana.mainloop()


#at +-
#crontab
#std
#controlar los argumentos de entrada
#no such file or directory
